# -*- coding: utf-8 -*-
"""Airlines_reviews_Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16qO1Ke0kpneMDf0-kGYMhs3Fk8DeF4ko
"""

from bs4 import BeautifulSoup
import pandas as pd
import numpy as np
import requests as rq
import re

global rating, Author, Aircraft, Class, Travel_type, Route, Date, comfort, staff, food, entertainment, wifi, ground_service, vfm, recommend

Author=[]
country = []
review_date = []
review_title = []
verified=[]
rating=[]
feedback=[]
Aircraft=[]
Class=[]
Travel_type=[]
Route=[]
Date=[]
comfort=[]
staff=[]
food=[]
entertainment=[]
wifi=[]
ground_service=[]
vfm=[]
recommend=[]

def value_fetcher(soup):
    #Author.append(np.nan)
    rating.append(np.nan)
    Aircraft.append(np.nan)
    Class.append(np.nan)
    Travel_type.append(np.nan)
    Route.append(np.nan)
    Date.append(np.nan)
    comfort.append(np.nan)
    staff.append(np.nan)
    food.append(np.nan)
    entertainment.append(np.nan)
    wifi.append(np.nan)
    ground_service.append(np.nan)
    vfm.append(np.nan)
    recommend.append(np.nan)

    for row in soup.find_all('tr'):
        header=row.find('td',class_='review-rating-header').text
        value=row.find('td',class_='review-value')
        if header=='Aircraft':
            Aircraft[-1]=value.text
        elif header=='Type Of Traveller':
            Travel_type[-1]=value.text
        elif header=='Seat Type':
          Class[-1]=value.text
        elif header=='Route':
            Route[-1]=value.text
        elif header=='Date Flown':
            Date[-1]=value.text
        elif header=='Seat Comfort':
            comfort[-1]=len(row.find_all('span',class_='star fill'))
        elif header=='Cabin Staff Service':
            staff[-1]=len(row.find_all('span',class_='star fill'))
        elif header=='Food & Beverages':
            food[-1]=len(row.find_all('span',class_='star fill'))
        elif header=='Inflight Entertainment':
            entertainment[-1]=len(row.find_all('span',class_='star fill'))
        elif header=='Ground Service':
            ground_service[-1]=len(row.find_all('span',class_='star fill'))
        elif header=='Value For Money':
            vfm[-1]=len(row.find_all('span',class_='star fill'))
        elif header=='Recommended':
            recommend[-1]=value.text
        elif header=='Wifi & Connectivity':
            wifi[-1]=len(row.find_all('span',class_='star fill'))

def fetcher(soup, tag, key, value):
    if soup.find(tag, {key: value}):
        return soup.find(tag, {key: value}).text.strip()
    return np.nan

def extract_country(text):
    match = re.search(r'\((.*?)\)', text)
    if match:
        return match.group(1)
    return np.nan

for i in range(1,20):
    #url=f'https://www.airlinequality.com/airline-reviews/japan-airlines/page/{i}/'
    url=f'https://www.airlinequality.com/airline-reviews/delta-air-lines//page/{i}/'

    page=rq.get(url).text
    soup=BeautifulSoup(page,'lxml')
    articles= soup.find_all('article',{'itemprop':'review'})
    for article in articles:
        rating.append(fetcher(article,'span','itemprop','ratingValue'))
        div=article.find('div',class_='tc_mobile')
        content=(div.find('div',class_='text_content').text.split('|'))
        if len(content)==2:
            verification,review=content
        else:
            verification =np.nan
            review=content[0]
        verified.append(verification)
        feedback.append(review)
        table=div.find('table',class_='review-ratings')
        value_fetcher(table)

        author_element = article.find('span', itemprop='author')
        if author_element:
            author_name = re.sub(r'\d+ reviews', '', author_element.get_text(strip=True)).strip()
            Author.append(author_name)
            country_text = extract_country(author_element.parent.get_text(strip=True))
            country.append(country_text)
        else:
            Author.append(np.nan)
            country.append(np.nan)

        review_date.append(fetcher(article, 'time', 'itemprop', 'datePublished'))
        review_title.append(fetcher(article, 'h2', 'class', 'text_header'))

data=pd.DataFrame({'Author': Author,'Country': country,'Review_date': review_date,'Review_title': review_title,'Overall_rating':rating[::2], 'Status':verified,'Aircraft':Aircraft,'Travel_type':Travel_type,'Travel_class':Class,'Route':Route,'Date of flown':Date,'Seating_comfort':comfort,'Staff_service':staff,'Food_quality':food,'Entertainment':entertainment,'Wifi':wifi,'Ground_service':ground_service,'Value_for_money':vfm,'Recommended':recommend,'Review':feedback})

#data.to_csv('Japan_Airlines_Data.csv',index=True)
data.to_csv('Delta Airlines_Data.csv',index=True)
data

